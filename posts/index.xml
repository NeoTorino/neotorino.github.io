<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - NeoTorino</title>
        <link>http://localhost:1313/posts/</link>
        <description>All Posts | NeoTorino</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 27 Apr 2025 17:12:46 &#43;0100</lastBuildDate><atom:link href="http://localhost:1313/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Rust</title>
    <link>http://localhost:1313/rust/</link>
    <pubDate>Sun, 27 Apr 2025 17:12:46 &#43;0100</pubDate>
    <author>NeoTorino</author>
    <guid>http://localhost:1313/rust/</guid>
    <description><![CDATA[<p>To run it:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-Shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Shell" data-lang="Shell"><span class="line"><span class="cl">rustc list_files.rs -o list_files
</span></span><span class="line"><span class="cl">./list_files /path/to/directory</span></span></code></pre></div></div>
<p><em>list_files.rs</em></p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-Rust">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Rust" data-lang="Rust"><span class="line"><span class="cl"><span class="k">use</span><span class="w"> </span><span class="n">std</span>::<span class="n">env</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">use</span><span class="w"> </span><span class="n">std</span>::<span class="n">fs</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">use</span><span class="w"> </span><span class="n">std</span>::<span class="n">path</span>::<span class="n">Path</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">fn</span> <span class="nf">main</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">args</span>: <span class="nb">Vec</span><span class="o">&lt;</span><span class="nb">String</span><span class="o">&gt;</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">env</span>::<span class="n">args</span><span class="p">().</span><span class="n">collect</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="n">args</span><span class="p">.</span><span class="n">len</span><span class="p">()</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="mi">2</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="fm">eprintln!</span><span class="p">(</span><span class="s">&#34;Usage: </span><span class="si">{}</span><span class="s"> &lt;directory_path&gt;&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">args</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">std</span>::<span class="n">process</span>::<span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Path</span>::<span class="n">new</span><span class="p">(</span><span class="o">&amp;</span><span class="n">args</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="o">!</span><span class="n">path</span><span class="p">.</span><span class="n">is_dir</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="fm">eprintln!</span><span class="p">(</span><span class="s">&#34;Error: </span><span class="si">{}</span><span class="s"> is not a directory&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">path</span><span class="p">.</span><span class="n">display</span><span class="p">());</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">std</span>::<span class="n">process</span>::<span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">match</span><span class="w"> </span><span class="n">fs</span>::<span class="n">read_dir</span><span class="p">(</span><span class="n">path</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nb">Ok</span><span class="p">(</span><span class="n">entries</span><span class="p">)</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="fm">println!</span><span class="p">(</span><span class="s">&#34;Listing files in directory: </span><span class="si">{}</span><span class="s">&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">path</span><span class="p">.</span><span class="n">display</span><span class="p">());</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="k">for</span><span class="w"> </span><span class="n">entry</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">entries</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="k">match</span><span class="w"> </span><span class="n">entry</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nb">Ok</span><span class="p">(</span><span class="n">entry</span><span class="p">)</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                        </span><span class="fm">println!</span><span class="p">(</span><span class="s">&#34;</span><span class="si">{}</span><span class="s">&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">entry</span><span class="p">.</span><span class="n">file_name</span><span class="p">().</span><span class="n">to_string_lossy</span><span class="p">());</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="nb">Err</span><span class="p">(</span><span class="n">e</span><span class="p">)</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                        </span><span class="fm">eprintln!</span><span class="p">(</span><span class="s">&#34;Error reading entry: </span><span class="si">{}</span><span class="s">&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">e</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nb">Err</span><span class="p">(</span><span class="n">e</span><span class="p">)</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="fm">eprintln!</span><span class="p">(</span><span class="s">&#34;Error opening directory: </span><span class="si">{}</span><span class="s">&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">e</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">std</span>::<span class="n">process</span>::<span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span></span></span></code></pre></div></div>]]></description>
</item>
<item>
    <title>Assembly</title>
    <link>http://localhost:1313/assesmbly/</link>
    <pubDate>Sun, 27 Apr 2025 15:48:06 &#43;0100</pubDate>
    <author>NeoTorino</author>
    <guid>http://localhost:1313/assesmbly/</guid>
    <description><![CDATA[<p>; Calculate the Fibonacci number using recursion
; fib(n) = fib(n-1) + fib(n-2)</p>
<p><strong>lib.asm</strong></p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-Assembly">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">%</span><span class="n">include</span> <span class="s2">&#34;constants.asm&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">section</span> <span class="o">.</span><span class="n">data</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">section</span> <span class="o">.</span><span class="n">bss</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span><span class="n">buffer</span>	<span class="n">resb</span>	<span class="mi">255</span>			<span class="p">;</span> <span class="n">reserverd</span> <span class="mi">255</span> <span class="n">bytes</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">section</span> <span class="o">.</span><span class="n">text</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="o">-----------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Calculate</span> <span class="n">the</span> <span class="n">length</span> <span class="n">of</span> <span class="n">a</span> <span class="n">string</span> <span class="ow">in</span> <span class="n">rsi</span><span class="o">.</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">The</span> <span class="n">string</span> <span class="n">can</span> <span class="n">end</span> <span class="ow">in</span> <span class="n">LF</span> <span class="p">(</span>\<span class="n">n</span><span class="p">)</span> <span class="ow">or</span> <span class="n">NUL</span> <span class="p">(</span>\<span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="ne">Input</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">rsi</span> <span class="n">points</span> <span class="n">to</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Output</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">rax</span> <span class="n">contains</span> <span class="n">length</span><span class="o">.</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Error</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">rax</span> <span class="n">returns</span> <span class="o">-</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">	<span class="n">_fn_strlen</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="n">xor</span>		<span class="n">rax</span><span class="p">,</span> <span class="n">rax</span>			<span class="p">;</span> <span class="n">clear</span> <span class="n">rax</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="n">_fn_strlen_loop</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="n">cmp</span>		<span class="n">BYTE</span> <span class="p">[</span><span class="n">rsi</span> <span class="o">+</span> <span class="n">rax</span><span class="p">],</span> <span class="mh">0x0A</span>	<span class="p">;</span> <span class="n">compare</span> <span class="n">with</span> <span class="n">LF</span> <span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span>
</span></span><span class="line"><span class="cl">			<span class="n">je</span>		<span class="n">_fn_strlen_break</span>
</span></span><span class="line"><span class="cl">			<span class="n">cmp</span>		<span class="n">BYTE</span> <span class="p">[</span><span class="n">rsi</span> <span class="o">+</span> <span class="n">rax</span><span class="p">],</span> <span class="mh">0x00</span>	<span class="p">;</span> <span class="n">compare</span> <span class="n">with</span> <span class="n">NUL</span> <span class="s1">&#39;</span><span class="se">\0</span><span class="s1">&#39;</span>
</span></span><span class="line"><span class="cl">			<span class="n">je</span>		<span class="n">_fn_strlen_break</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="n">inc</span>		<span class="n">rax</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="n">jmp</span>		<span class="n">_fn_strlen_loop</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="n">_fn_strlen_break</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="n">ret</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="n">_fn_strlen_error</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="n">xor</span>		<span class="n">rax</span><span class="p">,</span> <span class="n">rax</span>			<span class="p">;</span> <span class="n">set</span> <span class="n">to</span> <span class="mi">0</span> <span class="p">(</span><span class="n">all</span> <span class="mi">0</span><span class="n">s</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="ow">not</span>		<span class="n">rax</span>					<span class="p">;</span> <span class="n">invert</span> <span class="p">(</span><span class="n">all</span> <span class="mi">1</span><span class="n">s</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="n">ret</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="o">-----------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Convert</span> <span class="n">string</span> <span class="n">of</span> <span class="n">numbers</span> <span class="n">to</span> <span class="n">integer</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="ne">Input</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">rsi</span> <span class="n">points</span> <span class="n">to</span> <span class="n">the</span> <span class="n">string</span> <span class="n">of</span> <span class="n">numbers</span> <span class="n">ending</span> <span class="ow">in</span> <span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Output</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">rcx</span> <span class="n">contains</span> <span class="n">the</span> <span class="n">integer</span> <span class="n">representation</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Error</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">rax</span> <span class="n">equals</span> <span class="mi">1</span>	
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Modifies</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">rax</span><span class="p">,</span> <span class="n">rbx</span><span class="p">,</span> <span class="n">r8</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Dependencies</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">_fn_strlen</span><span class="p">,</span> <span class="n">to</span> <span class="n">calculate</span> <span class="n">the</span> <span class="n">length</span>  <span class="n">of</span> <span class="n">the</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">_fn_exit</span><span class="p">,</span> <span class="n">to</span> <span class="n">exit</span> <span class="k">if</span> <span class="n">error</span>
</span></span><span class="line"><span class="cl">	<span class="n">_fn_str2int</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="n">xor</span>		<span class="n">rbx</span><span class="p">,</span> <span class="n">rbx</span>			<span class="p">;</span> <span class="n">clear</span> <span class="n">rbx</span><span class="p">,</span> <span class="n">to</span> <span class="n">store</span> <span class="n">the</span> <span class="n">decimal</span> <span class="n">part</span>
</span></span><span class="line"><span class="cl">		<span class="n">xor</span>		<span class="n">rcx</span><span class="p">,</span> <span class="n">rcx</span>			<span class="p">;</span> <span class="n">clear</span> <span class="n">rcx</span><span class="p">,</span> <span class="n">to</span> <span class="n">store</span> <span class="n">the</span> <span class="n">final</span> <span class="n">number</span>
</span></span><span class="line"><span class="cl">		<span class="n">mov</span>		<span class="n">r8</span><span class="p">,</span>	<span class="mh">0x0A</span>			<span class="p">;</span> <span class="n">base</span> <span class="mi">10</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="n">_fn_str2int_init</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="p">;</span> <span class="ne">Input</span> <span class="n">rsi</span> <span class="n">points</span> <span class="n">to</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">			<span class="p">;</span> <span class="n">Output</span> <span class="n">rax</span> <span class="n">contains</span> <span class="n">length</span>
</span></span><span class="line"><span class="cl">			<span class="p">;</span> <span class="n">Modifies</span> <span class="n">rax</span>
</span></span><span class="line"><span class="cl">			<span class="n">call</span>	<span class="n">_fn_strlen</span>		<span class="p">;</span> <span class="n">calculate</span> <span class="n">the</span> <span class="n">length</span> <span class="n">of</span> <span class="n">the</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="n">cmp</span>		<span class="n">al</span><span class="p">,</span> <span class="mi">0</span>			<span class="p">;</span> <span class="n">exit</span> <span class="n">function</span> <span class="k">if</span> <span class="n">length</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">			<span class="n">je</span>		<span class="n">_fn_str2int_end</span>		
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="n">cmp</span>		<span class="n">al</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">			<span class="n">je</span>		<span class="n">_fn_str2int_err</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="n">mov</span>		<span class="n">rdx</span><span class="p">,</span> <span class="n">rax</span>		<span class="p">;</span> <span class="n">copy</span> <span class="n">the</span> <span class="n">length</span> <span class="n">from</span> <span class="n">rax</span> <span class="n">to</span> <span class="n">rdx</span>
</span></span><span class="line"><span class="cl">			<span class="n">mov</span>		<span class="n">rax</span><span class="p">,</span> <span class="mh">0x01</span>		<span class="p">;</span> <span class="n">put</span> <span class="mi">1</span> <span class="ow">in</span> <span class="n">rax</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="n">_fn_str2int_base</span><span class="p">:</span>				<span class="p">;</span> <span class="n">create</span> <span class="n">base</span> <span class="mi">10</span> <span class="n">position</span>
</span></span><span class="line"><span class="cl">			<span class="n">dec</span>		<span class="n">dl</span>
</span></span><span class="line"><span class="cl">			<span class="n">cmp</span>		<span class="n">dl</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">			<span class="n">jle</span>		<span class="n">_fn_str2int_decimal</span>
</span></span><span class="line"><span class="cl">			<span class="n">imul</span>	<span class="n">rax</span><span class="p">,</span> <span class="n">r8</span>
</span></span><span class="line"><span class="cl">			<span class="n">jmp</span>		<span class="n">_fn_str2int_base</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="n">_fn_str2int_decimal</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="n">mov</span>		<span class="n">bl</span><span class="p">,</span> <span class="n">byte</span> <span class="p">[</span><span class="n">rsi</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="n">cmp</span>		<span class="n">bl</span><span class="p">,</span> <span class="mh">0x30</span>		<span class="p">;</span> <span class="n">compare</span> <span class="n">with</span> <span class="n">num</span><span class="o">.</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">			<span class="n">jl</span>		<span class="n">_fn_str2int_err</span>	<span class="p">;</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">an</span> <span class="n">integer</span> <span class="n">go</span> <span class="n">to</span> <span class="n">erro</span>
</span></span><span class="line"><span class="cl">			<span class="n">cmp</span>		<span class="n">bl</span><span class="p">,</span> <span class="mh">0x39</span>		<span class="p">;</span> <span class="n">compare</span> <span class="n">with</span> <span class="n">num</span><span class="o">.</span> <span class="mi">9</span>
</span></span><span class="line"><span class="cl">			<span class="n">jg</span>		<span class="n">_fn_str2int_err</span>	<span class="p">;</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">an</span> <span class="n">integer</span> <span class="n">go</span> <span class="n">to</span> <span class="n">error</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="n">sub</span>		<span class="n">bl</span><span class="p">,</span> <span class="mh">0x30</span>		<span class="p">;</span> <span class="n">to</span> <span class="n">get</span> <span class="n">integer</span> <span class="n">representation</span>
</span></span><span class="line"><span class="cl">									<span class="p">;</span> <span class="n">from</span> <span class="n">a</span> <span class="n">char</span> <span class="n">number</span> <span class="ow">in</span> <span class="n">ASCII</span>
</span></span><span class="line"><span class="cl">			<span class="n">mul</span>		<span class="n">rbx</span>				<span class="p">;</span> <span class="n">add</span> <span class="n">the</span> <span class="n">integer</span> <span class="n">part</span>
</span></span><span class="line"><span class="cl">			<span class="n">add</span>		<span class="n">rcx</span><span class="p">,</span> <span class="n">rax</span>		<span class="p">;</span> <span class="n">store</span> <span class="n">decimal</span> <span class="n">value</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="n">inc</span>		<span class="n">rsi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="n">jmp</span>		<span class="n">_fn_str2int_init</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="n">_fn_str2int_end</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="n">ret</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="n">_fn_str2int_err</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="n">mov</span>		<span class="n">rax</span><span class="p">,</span> <span class="mh">0x01</span>			<span class="p">;</span> <span class="n">error</span> <span class="n">code</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">			<span class="n">ret</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="o">-----------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Convert</span> <span class="n">an</span> <span class="n">integer</span> <span class="n">to</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="ne">Input</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">rax</span> <span class="n">contains</span> <span class="n">the</span> <span class="n">integer</span> <span class="n">to</span> <span class="nb">convert</span> <span class="n">to</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Output</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">rsi</span> <span class="n">points</span> <span class="n">to</span> <span class="n">the</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">rdx</span>	<span class="n">contains</span> <span class="n">the</span> <span class="n">length</span> <span class="n">of</span> <span class="n">the</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Error</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">rax</span> <span class="n">equals</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Modifies</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">rax</span><span class="p">,</span> <span class="n">rcx</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Dependencies</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">_fn_strlen</span><span class="p">,</span> <span class="n">to</span> <span class="n">calculate</span> <span class="n">the</span> <span class="n">length</span>  <span class="n">of</span> <span class="n">the</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">_fn_exit</span><span class="p">,</span> <span class="n">to</span> <span class="n">exit</span> <span class="k">if</span> <span class="n">error</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Notes</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="o">-</span> <span class="n">Division</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>		<span class="o">-</span> <span class="n">Byte</span><span class="o">/</span><span class="n">Byte</span><span class="p">:</span> <span class="n">The</span> <span class="n">nominator</span> <span class="n">resides</span> <span class="ow">in</span> <span class="n">the</span> <span class="n">AL</span> <span class="n">register</span> <span class="ow">and</span> <span class="n">AH</span> <span class="n">is</span> <span class="n">set</span> <span class="n">to</span> <span class="n">zero</span><span class="o">.</span> <span class="n">After</span> <span class="n">division</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>					<span class="n">the</span> <span class="n">instruction</span> <span class="n">stores</span> <span class="n">quotient</span> <span class="ow">in</span> <span class="n">AL</span> <span class="ow">and</span> <span class="n">the</span> <span class="n">remainder</span> <span class="ow">in</span> <span class="n">AH</span> <span class="n">register</span><span class="o">.</span> 
</span></span><span class="line"><span class="cl">	<span class="p">;</span>		<span class="o">-</span> <span class="n">Word</span><span class="o">/</span><span class="n">Word</span><span class="p">:</span> <span class="n">The</span> <span class="n">AX</span> <span class="n">register</span> <span class="n">holds</span> <span class="n">the</span> <span class="n">numerator</span><span class="o">.</span> <span class="n">After</span> <span class="n">division</span><span class="p">,</span> <span class="n">the</span> <span class="n">quotient</span> <span class="n">is</span> <span class="n">stored</span> <span class="ow">in</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>					<span class="n">the</span> <span class="n">AX</span> <span class="n">register</span> <span class="ow">and</span> <span class="n">the</span> <span class="n">remainder</span> <span class="n">goes</span> <span class="n">to</span> <span class="n">the</span> <span class="n">DX</span> <span class="n">register</span><span class="o">.</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>		<span class="o">-</span> <span class="n">Word</span><span class="o">/</span><span class="n">Byte</span><span class="p">:</span> <span class="n">The</span> <span class="n">numerator</span> <span class="n">is</span> <span class="n">a</span> <span class="mi">16</span><span class="o">-</span><span class="n">bit</span> <span class="n">word</span> <span class="n">stored</span> <span class="ow">in</span> <span class="n">AX</span> <span class="n">which</span> <span class="n">is</span> <span class="n">divided</span> <span class="n">with</span> <span class="n">an</span> <span class="mi">8</span><span class="o">-</span><span class="n">bit</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>					<span class="n">denominator</span><span class="o">.</span> <span class="n">After</span> <span class="n">division</span><span class="p">,</span> <span class="n">the</span> <span class="n">AL</span> <span class="n">contains</span> <span class="n">the</span> <span class="n">quotient</span> <span class="ow">and</span> <span class="n">AH</span> <span class="n">will</span> <span class="n">contain</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>					<span class="n">the</span> <span class="n">remainder</span><span class="o">.</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>		<span class="o">-</span> <span class="n">Double</span> <span class="n">Word</span><span class="o">/</span><span class="n">Word</span><span class="p">:</span>  <span class="n">AX</span> <span class="ow">and</span> <span class="n">DX</span> <span class="n">stores</span> <span class="n">the</span> <span class="n">numerator</span><span class="o">.</span> <span class="n">The</span> <span class="n">most</span> <span class="n">significant</span> <span class="n">part</span> <span class="n">resides</span> <span class="ow">in</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>					<span class="n">the</span> <span class="n">DX</span> <span class="n">register</span> <span class="ow">and</span> <span class="n">the</span> <span class="n">least</span> <span class="n">significant</span> <span class="n">bits</span> <span class="n">of</span> <span class="n">numerator</span> <span class="n">are</span> <span class="ow">in</span> <span class="n">the</span> <span class="n">AX</span> <span class="n">register</span><span class="o">.</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>					<span class="n">After</span> <span class="n">the</span> <span class="n">execution</span> <span class="n">of</span> <span class="n">DIV</span> <span class="n">instruction</span><span class="p">,</span> <span class="n">the</span> <span class="n">remainder</span> <span class="n">goes</span> <span class="n">to</span> <span class="n">DX</span> <span class="n">register</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>					<span class="ow">and</span> <span class="n">the</span> <span class="n">quotient</span> <span class="n">lie</span> <span class="ow">in</span> <span class="n">AX</span> <span class="n">register</span><span class="o">.</span>
</span></span><span class="line"><span class="cl">	<span class="n">_fn_int2str</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="n">mov</span>		<span class="n">rbx</span><span class="p">,</span> <span class="mh">0x0A</span>				<span class="p">;</span> <span class="n">Put</span> <span class="mi">10</span> <span class="ow">in</span> <span class="n">rbx</span>
</span></span><span class="line"><span class="cl">		<span class="n">xor</span>		<span class="n">rcx</span><span class="p">,</span> <span class="n">rcx</span>				<span class="p">;</span> <span class="n">clear</span> <span class="n">rcx</span><span class="p">,</span> <span class="n">to</span> <span class="n">store</span> <span class="n">the</span> <span class="n">legnth</span>
</span></span><span class="line"><span class="cl">		<span class="n">xor</span>		<span class="n">rdx</span><span class="p">,</span> <span class="n">rdx</span>				<span class="p">;</span> <span class="n">clear</span> <span class="n">rdx</span><span class="p">,</span> <span class="n">to</span> <span class="n">store</span> <span class="n">the</span> <span class="n">reminder</span> <span class="k">for</span> <span class="n">word</span> <span class="ow">or</span> <span class="n">double</span> <span class="n">word</span> <span class="n">division</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="n">_fn_int2str_init</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="n">cmp</span>		<span class="n">rax</span><span class="p">,</span> <span class="n">rbx</span>				<span class="p">;</span> <span class="n">check</span> <span class="k">if</span> <span class="n">number</span> <span class="n">is</span> <span class="n">smaller</span> <span class="n">than</span> <span class="n">the</span> <span class="n">base</span>
</span></span><span class="line"><span class="cl">			<span class="n">jl</span>		<span class="n">_fn_int2str_end</span>			<span class="p">;</span> <span class="n">end</span> <span class="k">if</span> <span class="n">smaller</span> <span class="n">than</span> <span class="n">base</span>
</span></span><span class="line"><span class="cl">			<span class="n">div</span>		<span class="n">rbx</span>						<span class="p">;</span> <span class="n">rax</span> <span class="o">=</span> <span class="n">rax</span> <span class="o">/</span> <span class="n">rbx</span><span class="p">,</span> <span class="n">rdx</span> <span class="o">=</span> <span class="n">rax</span> <span class="o">%</span> <span class="n">rbx</span>
</span></span><span class="line"><span class="cl">			<span class="n">add</span>		<span class="n">dl</span><span class="p">,</span> <span class="mh">0x30</span>				<span class="p">;</span> <span class="nb">convert</span> <span class="n">reminder</span> <span class="n">to</span> <span class="n">string</span> <span class="ow">in</span> <span class="n">ASCII</span>
</span></span><span class="line"><span class="cl">			<span class="n">push</span>	<span class="n">rdx</span>						<span class="p">;</span> <span class="n">push</span> <span class="n">rdx</span> <span class="n">to</span> <span class="n">the</span> <span class="n">stack</span>
</span></span><span class="line"><span class="cl">			<span class="n">inc</span>		<span class="n">cl</span>						<span class="p">;</span> <span class="n">increment</span> <span class="n">length</span>
</span></span><span class="line"><span class="cl">			<span class="n">jmp</span>		<span class="n">_fn_int2str_init</span>		<span class="p">;</span> <span class="n">start</span> <span class="n">again</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="n">_fn_int2str_end</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="n">add</span>		<span class="n">al</span><span class="p">,</span> <span class="mh">0x30</span>				<span class="p">;</span> <span class="nb">convert</span> <span class="n">num</span> <span class="n">to</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">			<span class="n">push</span>	<span class="n">rax</span>
</span></span><span class="line"><span class="cl">			<span class="n">inc</span>		<span class="n">cl</span>						<span class="p">;</span> <span class="n">increment</span> <span class="n">string</span> <span class="n">length</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="n">mov</span>		<span class="n">al</span><span class="p">,</span>	<span class="mh">0x0A</span>				<span class="p">;</span> <span class="n">store</span> <span class="n">LF</span> <span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span>
</span></span><span class="line"><span class="cl">			<span class="n">push</span>	<span class="n">rax</span>
</span></span><span class="line"><span class="cl">			<span class="n">inc</span>		<span class="n">cl</span>						<span class="p">;</span> <span class="n">increment</span> <span class="n">string</span> <span class="n">length</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="n">_fn_int2str_reverse</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="n">mov</span>		<span class="n">dl</span><span class="p">,</span> <span class="n">cl</span>					<span class="p">;</span> <span class="n">move</span> <span class="n">the</span> <span class="n">length</span> <span class="n">to</span> <span class="n">rdx</span>
</span></span><span class="line"><span class="cl">			<span class="n">xor</span>		<span class="n">rcx</span><span class="p">,</span> <span class="n">rcx</span>
</span></span><span class="line"><span class="cl">			<span class="n">cmp</span>		<span class="n">dl</span><span class="p">,</span> <span class="n">cl</span>
</span></span><span class="line"><span class="cl">			<span class="n">je</span>		<span class="n">_fn_int2str_exit</span>
</span></span><span class="line"><span class="cl">			<span class="n">pop</span>		<span class="n">rax</span>
</span></span><span class="line"><span class="cl">			<span class="n">mov</span>		<span class="n">byte</span><span class="p">[</span><span class="n">buffer</span> <span class="o">+</span> <span class="n">rcx</span><span class="p">],</span> <span class="n">al</span>
</span></span><span class="line"><span class="cl">			<span class="n">inc</span>		<span class="n">cl</span>
</span></span><span class="line"><span class="cl">			<span class="n">jmp</span>		<span class="n">_fn_int2str_reverse</span>
</span></span><span class="line"><span class="cl">			<span class="n">ret</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="n">_fn_int2str_exit</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="n">mov</span>		<span class="n">rsi</span><span class="p">,</span> <span class="n">buffer</span>				<span class="p">;</span> <span class="n">point</span> <span class="n">rsi</span> <span class="n">to</span> <span class="n">buffer</span> <span class="n">address</span>
</span></span><span class="line"><span class="cl">			<span class="n">ret</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="n">_fn_int2str_err</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="n">mov</span>		<span class="n">rax</span><span class="p">,</span> <span class="mh">0x01</span>				<span class="p">;</span> <span class="n">error</span> <span class="n">code</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">			<span class="n">ret</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="o">-----------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Exit</span> <span class="n">program</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="ne">Input</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>	<span class="n">rdi</span> <span class="n">contains</span> <span class="n">the</span> <span class="k">return</span> <span class="n">code</span>
</span></span><span class="line"><span class="cl">	<span class="n">_fn_exit</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="p">;</span> <span class="n">exit</span> 
</span></span><span class="line"><span class="cl">		<span class="n">mov</span>		<span class="n">rax</span><span class="p">,</span> <span class="n">SYS_EXIT</span>		<span class="p">;</span> <span class="n">syscall</span> <span class="k">for</span> <span class="n">exit</span>
</span></span><span class="line"><span class="cl">		<span class="n">syscall</span>						<span class="p">;</span> <span class="n">call</span> <span class="n">kernel</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="o">-----------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Reads</span> <span class="n">input</span> <span class="n">from</span> <span class="n">stdin</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">reads</span> <span class="n">from</span> <span class="n">stdin</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="ne">Input</span> <span class="n">rsi</span> <span class="o">-&gt;</span> <span class="n">buffer</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>		<span class="n">rdx</span> <span class="o">=</span> <span class="n">buffer</span> <span class="n">length</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">modifies</span> <span class="n">rax</span><span class="p">,</span> <span class="n">rdi</span>
</span></span><span class="line"><span class="cl">	<span class="n">_fn_read</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="n">mov</span>		<span class="n">rax</span><span class="p">,</span> <span class="n">SYS_READ</span>		<span class="p">;</span> <span class="n">syscall</span> <span class="k">for</span> <span class="n">read</span>
</span></span><span class="line"><span class="cl">		<span class="n">mov</span>		<span class="n">rdi</span><span class="p">,</span> <span class="n">STDIN</span>			<span class="p">;</span> <span class="n">stdin</span> <span class="n">file</span> <span class="n">descriptor</span>
</span></span><span class="line"><span class="cl">		<span class="n">syscall</span>						<span class="p">;</span> <span class="n">execute</span> <span class="n">read</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">buffer</span><span class="p">,</span> <span class="n">bufsize</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="n">ret</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="o">-----------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Writes</span> <span class="n">to</span> <span class="n">stdout</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="ne">Input</span> <span class="n">rsi</span> <span class="o">-&gt;</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>       <span class="n">rdx</span> <span class="o">=</span> <span class="n">string</span> <span class="n">length</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span> <span class="n">Modifies</span> <span class="n">rax</span><span class="p">,</span> <span class="n">rdi</span>
</span></span><span class="line"><span class="cl">	<span class="n">_fn_write</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="n">mov</span>		<span class="n">rax</span><span class="p">,</span> <span class="n">SYS_WRITE</span>		<span class="p">;</span> <span class="n">syscall</span> <span class="k">for</span> <span class="n">write</span>
</span></span><span class="line"><span class="cl">		<span class="n">mov</span>		<span class="n">rdi</span><span class="p">,</span> <span class="n">STDOUT</span>			<span class="p">;</span> <span class="n">stdout</span> <span class="n">file</span> <span class="n">descriptor</span>
</span></span><span class="line"><span class="cl">		<span class="n">syscall</span>						<span class="p">;</span> <span class="n">execute</span> <span class="n">write</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">		<span class="n">ret</span></span></span></code></pre></div></div>
<p><strong>constants.asm</strong></p>]]></description>
</item>
<item>
    <title>C</title>
    <link>http://localhost:1313/c/</link>
    <pubDate>Sat, 26 Apr 2025 15:48:06 &#43;0100</pubDate>
    <author>NeoTorino</author>
    <guid>http://localhost:1313/c/</guid>
    <description><![CDATA[<p>To compile run:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-Shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Shell" data-lang="Shell"><span class="line"><span class="cl">gcc list_files.c -o list_files
</span></span><span class="line"><span class="cl">./list_files /path/to/directory</span></span></code></pre></div></div>
<p>list_files.c</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-c">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdlib.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;dirent.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;string.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">struct</span> <span class="n">dirent</span> <span class="o">*</span><span class="n">de</span><span class="p">;</span>  <span class="c1">// Pointer for directory entry
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">DIR</span> <span class="o">*</span><span class="n">dr</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">!=</span> <span class="mi">2</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Usage: %s &lt;directory_path&gt;</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Open the directory
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">dr</span> <span class="o">=</span> <span class="nf">opendir</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">dr</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nf">perror</span><span class="p">(</span><span class="s">&#34;Could not open directory&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Listing files in directory: %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="p">((</span><span class="n">de</span> <span class="o">=</span> <span class="nf">readdir</span><span class="p">(</span><span class="n">dr</span><span class="p">))</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">de</span><span class="o">-&gt;</span><span class="n">d_name</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nf">closedir</span><span class="p">(</span><span class="n">dr</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></div></div>]]></description>
</item>
<item>
    <title>Shells</title>
    <link>http://localhost:1313/shells/</link>
    <pubDate>Sat, 26 Apr 2025 14:00:42 &#43;0100</pubDate>
    <author>NeoTorino</author>
    <guid>http://localhost:1313/shells/</guid>
    <description><![CDATA[<table>
  <thead>
      <tr>
          <th>Name</th>
          <th>Path</th>
          <th>FreeBSD</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>Bourne shell</td>
          <td>/bin/sh</td>
          <td>Installed</td>
      </tr>
      <tr>
          <td>Cshell</td>
          <td>/bin/csh</td>
          <td>Installed</td>
      </tr>
      <tr>
          <td>TENEX C shell</td>
          <td>/bin/tcsh</td>
          <td>Installed</td>
      </tr>
      <tr>
          <td>Bourne-again shell</td>
          <td>/path/to/bin/bash</td>
          <td>Available</td>
      </tr>
      <tr>
          <td>Z shell</td>
          <td>/path/to/bin/zsh</td>
          <td>Available</td>
      </tr>
      <tr>
          <td>Korn shell</td>
          <td>/path/to/bin/kcsh</td>
          <td>Available</td>
      </tr>
  </tbody>
</table>
<h2 id="print-1-to-5-script">Print 1 to 5&quot; script</h2>
<h3 id="bourne-shell-sh">Bourne shell (sh)</h3>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-Shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Shell" data-lang="Shell"><span class="line"><span class="cl"><span class="cp">#!/bin/sh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;Bourne shell loop:&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">i</span><span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="k">while</span> <span class="o">[</span> <span class="nv">$i</span> -le <span class="m">5</span> <span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="k">do</span>
</span></span><span class="line"><span class="cl">  <span class="nb">echo</span> <span class="s2">&#34;Number: </span><span class="nv">$i</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nv">i</span><span class="o">=</span><span class="sb">`</span>expr <span class="nv">$i</span> + 1<span class="sb">`</span>
</span></span><span class="line"><span class="cl"><span class="k">done</span></span></span></code></pre></div></div>
<p>This uses traditional Bourne syntax: while, test [ ], expr for arithmetic.</p>]]></description>
</item>
</channel>
</rss>
